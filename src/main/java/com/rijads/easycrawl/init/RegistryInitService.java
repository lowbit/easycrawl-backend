package com.rijads.easycrawl.init;

import com.rijads.easycrawl.model.ProductRegistry;
import com.rijads.easycrawl.repository.ProductRegistryRepository;
import com.rijads.easycrawl.utility.ProductTextProcessor;
import jakarta.transaction.Transactional;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class RegistryInitService {
    private static final Logger logger = LoggerFactory.getLogger(RegistryInitService.class);

    @Autowired private ProductRegistryRepository registryRepository;

    @Autowired private ProductTextProcessor textProcessor;

    @EventListener(ApplicationReadyEvent.class)
    @Transactional
    public void initializeRegistry() {
        logger.info("Checking if registry initialization is needed");

        if (registryRepository.count() > 0) {
            logger.info("Registry already contains data, skipping initialization");
            return;
        }

        logger.info("Initializing product registry with default values");

        List<ProductRegistry> registries = new ArrayList<>();

        // Add known brands
        String[] brands = {
            "3m",
            "a.g. healing",
            "acer",
            "adinstruments",
            "aerodreams",
            "aigo",
            "aiwa",
            "alba",
            "alcatel",
            "alfa",
            "alienware",
            "allied telesis",
            "almaz",
            "alpine",
            "amalgamated wireless",
            "amazon",
            "amd",
            "amkette",
            "amoi",
            "amstrad",
            "analog devices",
            "angstrem",
            "aoc",
            "aopen",
            "apple",
            "arçelik",
            "aselsan",
            "asus",
            "atari",
            "audiovox",
            "avaya",
            "averatec",
            "avibras",
            "axioo",
            "bae systems",
            "beetel",
            "beko",
            "benq",
            "binatone",
            "blackmagic design",
            "blaupunkt",
            "bmtf",
            "bolva",
            "bosch",
            "bose",
            "bpl",
            "braun",
            "brionvega",
            "brondi",
            "brother industries",
            "bt",
            "buffalo",
            "bush",
            "butterfly group",
            "byd electronic",
            "canon",
            "canovate",
            "casio",
            "cea technologies",
            "celkon",
            "changhong",
            "cherry mobile",
            "cicaré",
            "cinemeccanica",
            "cisco systems",
            "citefa",
            "clarinox technologies pty ltd",
            "clarion",
            "codan",
            "cowon",
            "creative",
            "crucial technology",
            "dawlance",
            "dell",
            "doel",
            "dog & bone",
            "dynalite",
            "dyson",
            "eclipse",
            "ecs",
            "eizo",
            "ekta",
            "electrolux",
            "elsa",
            "emachines",
            "embraer",
            "emerson electric",
            "emerson radio",
            "emi",
            "epox",
            "epson",
            "ericsson",
            "eurotech",
            "fadea",
            "fair group",
            "fairlight",
            "ferranti",
            "fitbit",
            "foxconn",
            "fuji electric",
            "fuji xerox",
            "fujifilm",
            "fujitsu",
            "fukuda inc.",
            "funai",
            "gateway",
            "geliyoo",
            "general satellite",
            "gigabyte",
            "gigaset",
            "gionee",
            "godrej",
            "google",
            "gorenje",
            "gradiente",
            "grundig",
            "haier",
            "hansol",
            "hasee",
            "havells",
            "hcl",
            "hewlett",
            "hidis",
            "hisense",
            "hitachi",
            "hp",
            "htc",
            "huawei",
            "husqvarna",
            "hyundai",
            "iball",
            "ibm",
            "iiyama",
            "indumil",
            "intel",
            "intex",
            "invap",
            "iriver",
            "itautec",
            "jamuna",
            "jbl",
            "jvc",
            "karbonn",
            "kef",
            "kenwood",
            "kingston",
            "končar group",
            "kongsberg gruppen",
            "konica minolta",
            "konka group",
            "koss",
            "kyocera",
            "lanix",
            "lenovo",
            "lg",
            "lite",
            "loewe ag",
            "luxafor",
            "maadiran group",
            "mabe",
            "magnavox",
            "marantz",
            "marcel",
            "marconi",
            "marshall",
            "maspion",
            "mcst",
            "mectron",
            "mediatek",
            "medion",
            "meebox",
            "meizu",
            "metz",
            "micromax",
            "micron technology",
            "microsoft",
            "miele",
            "minister",
            "mitchell & brown",
            "mitsubishi",
            "morphy richards",
            "moser baer",
            "motorola mobility",
            "msi",
            "national",
            "nec",
            "nexian",
            "nikon",
            "ningbo bird",
            "nintendo",
            "nokia",
            "nordic semiconductor",
            "nostromo",
            "notion ink",
            "npo",
            "digital television systems",
            "nvidia",
            "oki",
            "olivetti",
            "olympus",
            "oneplus",
            "onida",
            "oppo",
            "orion",
            "pace",
            "packard bell",
            "pakistan aeronautical complex",
            "panasonic",
            "panda",
            "pantech",
            "pel",
            "pensonic",
            "pentax",
            "philips",
            "pioneer",
            "plantronics",
            "polycom",
            "positivo informatica",
            "powerlab",
            "proscenic",
            "pure",
            "pye",
            "qmobile",
            "qualcomm",
            "radio marconi",
            "radio rentals",
            "rangs",
            "rca",
            "realme",
            "realtek",
            "renesas",
            "revox",
            "ricoh",
            "røde microphones",
            "rovercomputers",
            "russell hobbs",
            "samart",
            "samsung",
            "sandisk",
            "sansui electric",
            "sanyo",
            "satmex",
            "seagate",
            "sega corporation",
            "sennheiser",
            "severin elektro",
            "sgi",
            "sharp",
            "siemens",
            "sii",
            "silicon power",
            "simmtronics",
            "sinclair ",
            "siragon",
            "sitronics",
            "skyworth",
            "snk",
            "snowa",
            "sonos",
            "sony",
            "soyo",
            "sozvezdie",
            "starmobile",
            "sterlite",
            "summit electric supply",
            "sun microsystems",
            "surya",
            "surya roshni",
            "tcl",
            "tdk",
            "technisat",
            "telectronics",
            "telefunken",
            "termozeta",
            "texas instruments",
            "texet",
            "thomson broadcast",
            "thorn",
            "toshiba",
            "tp",
            "transcend",
            "transcom",
            "true",
            "trust",
            "tsmc",
            "uniross",
            "unisonic",
            "unisys",
            "vax",
            "vestel",
            "via technologies",
            "videocon",
            "videotex",
            "videoton",
            "viewsonic",
            "vit",
            "vix technology",
            "vizio",
            "voltas",
            "walton",
            "weg industries",
            "western digital",
            "westinghouse",
            "wi",
            "winradio",
            "wipro",
            "wortmann",
            "xerox",
            "xiaomi",
            "yota",
            "zenith",
            "zonda",
            "zopo mobile",
            "zte",
            "zyrex"
        };

        for (String brand : brands) {
            registries.add(
                    createRegistry(
                            ProductRegistry.RegistryType.BRAND,
                            brand,
                            null,
                            "Common brand: " + brand));
        }

        // Add common words to ignore
        String[] commonWords = {
                "new",
                "the",
                "best",
                "original",
                "genuine",
                "official",
                "premium",
                "super",
                "mega",
                "sale",
                "hot",
                "deal",
                "free",
                "shipping",
                "authentic",
                "limited",
                "exclusive",
                "professional",
                "deluxe",
                "ultimate",
                "enhanced",
                "portable",
                "compact",
                "wireless",
                "digital",
                "smart",
                "advanced",
                "innovative",
                "revolutionary",
                "high-quality",
                "luxury",
                "elite",
                "signature",
                "classic",
                "modern",
                "upgraded",
                "improved",
                "latest",
                "top-rated",
                "bestselling",
                "fast",
                "instant",
                "quick",
                "easy",
                "convenient",
                "all-in-one",
                "multifunctional",
                "versatile",
                "durable",
                "reliable",
                "sturdy",
                "lightweight",
                "heavy-duty",
                "adjustable",
                "customizable",
                "ergonomic",
                "comfortable",
                "affordable",
                "value",
                "budget",
                "eco-friendly",
                "organic",
                "natural",
                "pure",
                "specialized",
                "expert",
                "pro",
                "essential",
                "must-have",
                "trending",
                "popular",
                "rated",
                "reviewed",
                "handcrafted",
                "handmade",
                "artisan",
                "certified",
                "approved",
                "tested",
                "guaranteed",
                "satisfaction",
                "refurbished",
                "clearance",
                "discount",
                "bargain",
                "bonus",
                "gift",
                "bundle",
                "set",
                "kit",
                "pack",
                "collection",
                "series",
                "edition",
                "version",
                "model",
                "universal",
                "compatible",
                "perfect",
                "complete",
                "full",
                "mini",
                "maxi",
                "XL",
                "jumbo",
                "giant"
        };

        for (String word : commonWords) {
            registries.add(
                    createRegistry(
                            ProductRegistry.RegistryType.COMMON_WORD,
                            word,
                            null,
                            "Common word to ignore"));
        }

        // Add colors
        String[] colors = {
                "black",
                "white",
                "red",
                "blue",
                "green",
                "yellow",
                "pink",
                "purple",
                "gray",
                "grey",
                "silver",
                "gold",
                "orange",
                "brown",
                "navy",
                "teal",
                "aqua",
                "turquoise",
                "indigo",
                "violet",
                "magenta",
                "maroon",
                "crimson",
                "scarlet",
                "burgundy",
                "ruby",
                "emerald",
                "jade",
                "forest",
                "olive",
                "lime",
                "mint",
                "sage",
                "seafoam",
                "azure",
                "cobalt",
                "sapphire",
                "cerulean",
                "sky",
                "royal",
                "electric",
                "midnight",
                "steel",
                "slate",
                "charcoal",
                "onyx",
                "ebony",
                "ivory",
                "cream",
                "beige",
                "tan",
                "khaki",
                "taupe",
                "sand",
                "desert",
                "caramel",
                "bronze",
                "copper",
                "rust",
                "amber",
                "honey",
                "champagne",
                "platinum",
                "pewter",
                "gunmetal",
                "chrome",
                "metallic",
                "iridescent",
                "opal",
                "pearl",
                "pearlescent",
                "holographic",
                "matte",
                "glossy",
                "satin",
                "brushed",
                "polished",
                "rose gold",
                "arctic white",
                "jet black",
                "obsidian black",
                "phantom black",
                "space gray",
                "space black",
                "alpine green",
                "pacific blue",
                "sierra blue",
                "deep purple",
                "midnight green",
                "sunset orange",
                "sunrise red",
                "twilight purple",
                "midnight blue",
                "starlight",
                "moonlight",
                "sunburst",
                "stardust",
                "cosmic",
                "galactic",
                "nebula",
                "aurora",
                "northern lights",
                "shadow black",
                "shadow gray",
                "phantom white",
                "mystic bronze",
                "mystic silver",
                "mystic blue",
                "mystic green",
                "frost white",
                "frosted silver",
                "glacier blue",
                "glacier white",
                "ocean blue",
                "ocean green",
                "deep sea blue",
                "tropical green",
                "vintage brown",
                "vintage gold",
                "vintage copper",
                "antique brass",
                "antique gold",
                "rustic brown",
                "military green",
                "army green",
                "camo green",
                "titanium",
                "natural titanium",
                "desert titanium",
                "graphite",
                "carbon",
                "carbon fiber",
                "slate gray",
                "stone gray",
                "pebble gray",
                "ash gray",
                "smoky black",
                "stormy gray",
                "SilverShadow",
                "IcyBlue",
                "HeatWave",
                "VolcanicRed",
                "SunsetGold",
                "MoonlightSilver",
                "ForestMist",
                "OceanDepth",
                "RubyFusion",
                "AmethystGlow",
                "SapphireDusk",
                "EmeraldAura",
                "DesertSand",
                "CrimsonEdge",
                "FrostBite",
                "LavenderDream",
                "MidnightEssence",
                "CoralBlush",
                "TopazShimmer"
        };

        for (String color : colors) {
            registries.add(
                    createRegistry(
                            ProductRegistry.RegistryType.COLOR,
                            color,
                            null,
                            "Common product color"));
        }

        // Add model patterns
        String[] modelPatterns = {
                "model[:\\s]+([a-z0-9][-_a-z0-9]{2,25})",
                "([a-z][a-z]-[0-9]{4,})",
                "(galaxy\\s+[a-z][0-9]+[\\+\\s]*(?:ultra|plus|pro|fe|s|note)?)",
                "(redmi\\s+(?:note\\s+)?[0-9]{1,2}(?:\\s*[a-z]+)?)",
                "(iphone\\s+[0-9]{1,2}(?:\\s*(?:pro|max|plus|mini|air))?)",
                "(mac(?:book)?\\s+(?:pro|air|mini|studio)?\\s*(?:[0-9]{1,2}[\"]?)?)",
                "(surface\\s+(?:pro|go|laptop|book|studio)\\s*[0-9]{0,2})",
                "(ps[0-9](?:\\s*(?:pro|slim))?)",
                "(xbox\\s+(?:one|series\\s+[sx]))",
                "(switch\\s+(?:lite|oled)?)",
                "(inspiron|latitude|xps|precision)\\s+[0-9]{4}",
                "(thinkpad\\s+[a-z][0-9]{1,3}[a-z]?)",
                "(ideapad\\s+[0-9]{1,4})",
                "(legion\\s+[a-z]?[0-9]{1,2}(?:\\s*(?:pro|plus))?)",
                "(predator|nitro)\\s+[0-9]{1,2}",
                "(pavilion|envy|spectre|omen)\\s+[0-9]{1,2}[a-z]?",
                "(gram|swift|aspire|vivobook|zenbook)\\s+[0-9]{1,2}",
                "(nest\\s+(?:hub|mini|audio|cam|thermostat)(?:\\s+(?:max|plus))?)",
                "(echo\\s+(?:dot|show|studio|flex|sub|auto)?(?:\\s+(?:[0-9](?:rd|th)?\\s+gen))?)",
                "(kindle\\s+(?:paperwhite|oasis|scribe)?(?:\\s+(?:[0-9](?:rd|th)?\\s+gen))?)",
                "(fire\\s+(?:hd|tv)\\s+[0-9]{1,2}(?:\\s+(?:plus|max|pro))?)",
                "(gopro\\s+hero\\s+[0-9]{1,2}(?:\\s*(?:black|silver|white|session))?)",
                "(fitbit\\s+(?:charge|sense|versa|ionic|inspire|luxe|ace)\\s+[0-9]?)",
                "(apple\\s+watch\\s+(?:series\\s+)?[0-9]{1,2}(?:\\s*(?:pro|ultra|se))?)",
                "(airpods\\s+(?:pro|max)?(?:\\s+(?:[0-9](?:rd|th)?\\s+gen))?)",
                "(bose\\s+(?:quietcomfort|soundlink|soundsport|soundbar)\\s+[0-9]{1,3})",
                "(sonos\\s+(?:one|beam|arc|sub|roam|move|ray)(?:\\s+(?:sl|gen\\s+[0-9]))?)",
                "(dyson\\s+(?:v[0-9]{1,2}|hp[0-9]{2}|pure\\s*(?:cool|hot|humidify)))",
                "(roomba\\s+[a-z0-9]{2,6})",
                "(ninja\\s+(?:foodi|blender|air\\s*fryer)\\s+[a-z0-9]{2,8})",
                "(instant\\s+pot\\s+(?:duo|ultra|pro|crisp|vortex)\\s+[a-z0-9]{2,8})",
                "(kitchenaid\\s+(?:artisan|professional|classic|mini)\\s+[a-z0-9]{2,8})",
                "(lg\\s+(?:oled|nanocell|qned|uhd)(?:[0-9]{2}[a-z])?[0-9]{1,2})",
                "(samsung\\s+(?:qn|qe|un|ue)[0-9]{2}[a-z][0-9]{3,4}[a-z]?)",
                "(bravia\\s+xr-[0-9]{2}[a-z][0-9]{2,3})",
                "(elitebook|probook|zbook)\\s+[0-9]{3,4}[a-z]?",
                "(ryzen\\s+[0-9]\\s+[0-9]{4}(?:\\s*(?:x|xt|g|h|hs|u|h35))?)",
                "(core\\s+i[0-9]{1,2}[-\\s]+[0-9]{4,5}(?:[a-z]{1,2})?)",
                "([a-z0-9]+-[a-z0-9]+-[a-z0-9]+)"
        };

        for (String pattern : modelPatterns) {
            registries.add(
                    createRegistry(
                            ProductRegistry.RegistryType.MODEL_PATTERN,
                            pattern,
                            null,
                            "Regex pattern for model extraction"));
        }

        // Add storage patterns
        String[] storagePatterns = {
                "(\\d+\\s*\\+\\s*\\d+\\s*(?:gb|tb|gig|gigs|gigabyte|gigabytes|terabyte|terabytes)(?:\\s+storage)?)",
                "(\\d+\\s*(?:gb|tb|gig|gigs|gigabyte|gigabytes|terabyte|terabytes)(?:\\s+storage)?)",
                "(\\d+\\s*g(?:b)?(?:\\s+storage)?)",
                "((?:storage|capacity|memory):\\s*\\d+\\s*(?:gb|tb|g))",
                "(\\d+\\s*(?:gb|tb)\\s*(?:ssd|hdd|nvme|storage|drive))",
                "(\\d+\\s*(?:mb|kb)\\s*(?:ram|memory|cache))"
        };

        for (String pattern : storagePatterns) {
            registries.add(
                    createRegistry(
                            ProductRegistry.RegistryType.STORAGE_PATTERN,
                            pattern,
                            null,
                            "Regex pattern for storage capacity extraction"));
        }

        registryRepository.saveAll(registries);
        logger.info("Initialized registry with {} entries", registries.size());

        // Refresh the text processor cache
        textProcessor.refreshRegistry();
    }

    private ProductRegistry createRegistry(
            ProductRegistry.RegistryType type, String key, String value, String description) {

        ProductRegistry registry = new ProductRegistry();
        registry.setRegistryType(type);
        registry.setRegistryKey(key);
        registry.setRegistryValue(value);
        registry.setDescription(description);
        registry.setEnabled(true);

        return registry;
    }
}
